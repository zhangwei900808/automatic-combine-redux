!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).autoCombineRedux=t()}(this,(function(){"use strict";function e(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var n=[],r=!0,o=!1,u=void 0;try{for(var i,c=e[Symbol.iterator]();!(r=(i=c.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,u=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw u}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var t=function(e,t){return require.context(e,t,/\.reducer\.js$/)},n=function(t){return function(n,r){var o=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},e(r.match(/\w+(?=\.reducer\.js$)/),1)[0],t(r).default);return Object.assign({},n,o)}},r=function(e){return e.keys().reduce(n(e),{})};return{autoCombineReducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:".",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return r(t(e,n))},autoCombineSaga:function(){console.log("this is auto combine saga js")}}}));
